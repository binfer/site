<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on smoke</title>
    <link>/tags/php/</link>
    <description>Recent content in php on smoke</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Jul 2020 11:57:03 +0800</lastBuildDate>
    
	<atom:link href="/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PHP CSR证书生成</title>
      <link>/blog/php/php-csr%E8%AF%81%E4%B9%A6%E7%94%9F%E6%88%90/</link>
      <pubDate>Thu, 30 Jul 2020 11:57:03 +0800</pubDate>
      
      <guid>/blog/php/php-csr%E8%AF%81%E4%B9%A6%E7%94%9F%E6%88%90/</guid>
      <description>-参考: - https://www.jc2182.com/php/php-openssl-csr-new-ref.html
$subject = array( &amp;#34;commonName&amp;#34; =&amp;gt; &amp;#34;jc2182.com&amp;#34;, ); // Generate a new private (and public) key pair $private_key = openssl_pkey_new(array( &amp;#34;private_key_type&amp;#34; =&amp;gt; OPENSSL_KEYTYPE_EC, &amp;#34;curve_name&amp;#34; =&amp;gt; &amp;#39;prime256v1&amp;#39;, )); // Generate a certificate signing request $csr = openssl_csr_new($subject, $private_key, array(&amp;#39;digest_alg&amp;#39; =&amp;gt; &amp;#39;sha384&amp;#39;)); // Generate self-signed EC cert $x509 = openssl_csr_sign($csr, null, $private_key, $days=365, array(&amp;#39;digest_alg&amp;#39; =&amp;gt; &amp;#39;sha384&amp;#39;)); openssl_x509_export_to_file($x509, &amp;#39;ecc-cert.pem&amp;#39;); openssl_pkey_export_to_file($private_key, &amp;#39;ecc-private.key&amp;#39;); </description>
    </item>
    
    <item>
      <title>Php7.4新特性,升级事项</title>
      <link>/blog/php/php7.4%E6%96%B0%E7%89%B9%E6%80%A7-%E5%8D%87%E7%BA%A7%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Wed, 29 Jul 2020 15:48:07 +0800</pubDate>
      
      <guid>/blog/php/php7.4%E6%96%B0%E7%89%B9%E6%80%A7-%E5%8D%87%E7%BA%A7%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description>升级7.4注意事项, 建议:如果升级最好选择7.2 或者 7.3 (7.4的新特性可以忽略不计) ``
 Arch 发行版的反馈, 其他版本没有反馈    php-fpm 的新选项 ProtectHome 会导致经典的 File not found 错误，
 fixcode:  72510   引用:  php7.4 Commit   解决方案:  使用 systemctl edit php-fpm.service 修改 ProtectHome=false，重启服务.      php 解释器会对 null 类型的下标访问直接报错 Trying to access array offset on value of type null。
 解决方案:  修改代码解决      php 中经常使用 inlcude，require 等来包含其它文件。而调试发现在某个 include 之后，php 直接停止执行并报错 Trying to access array offset on value of type null - 解决方案： - 修改代码解决</description>
    </item>
    
    <item>
      <title>Cookie Samesite</title>
      <link>/blog/php/cookie-samesite/</link>
      <pubDate>Fri, 24 Jul 2020 10:13:38 +0800</pubDate>
      
      <guid>/blog/php/cookie-samesite/</guid>
      <description>`` 参考站: 1.	https://web.dev/samesite-cookies-explained/ 2.	https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-5.2
注意: Chrome80　版本后默认不允许跨站cookie操作，　如果要进行跨站cookie操作需要https请求。 Chrome84 版本开始支持samesite=none属性，　但是必须在https下进行，并且要指定Secure
支持： chrome://flags/#cookies-without-same-site-must-be-secure
环境：　1. Chrome 版本 84.0.4147.89（正式版本） （64 位） 2. php7.31 3. 本地http, 无ssl证书，　跨站访问无法测试  特性: 1. samesite=Lax	不设置SameSite属性，　默认为：　SameSite=Lax 2. samesite=struct	仅限于当前站使用cookie 3. samesite=none	上下文站点皆可使用cookie, none属性必须指定secure(以此表示是安全的关联站)
问题：　1.　解决内联站点被劫持的问题 2. 解决内联站点互相读取cookie
方案: 1. samesite=struct 仅限于当前站点使用 2. samesite=none 允许安全的关联站使用
测试场景： 打开 new.food 并从中请求 dev.food (跨站请求)
代码测试:
1. Set-Cookie: promo_shown=1; SameSite=Strict 结果: 仅限于当前站点 2. Set-Cookie: promo_shown=1; SameSite=Lax 结果: 跨站无法拿到对方cookie 3.</description>
    </item>
    
    <item>
      <title>Two Search Method</title>
      <link>/blog/php/two-search-method/</link>
      <pubDate>Wed, 22 Jan 2020 12:39:26 +0800</pubDate>
      
      <guid>/blog/php/two-search-method/</guid>
      <description> private function sel($n) { $ls = range(1,999999); $min = 1; $max = count($ls); $mid = 0; $r = &amp;#39;&amp;#39;; while ($min&amp;lt;$max) { $mid = intval(($min+$max) / 2); switch ($ls[$mid]&amp;lt;=&amp;gt;$n) { case -1: $max = $mid-1; break; case 1: $max = $mid+1; break; case 0: return $r = $ls[$mid]; break; } } return $r; } </description>
    </item>
    
    <item>
      <title>Temegram Php Message</title>
      <link>/blog/php/temegram-php-message/</link>
      <pubDate>Sat, 30 Nov 2019 13:10:08 +0800</pubDate>
      
      <guid>/blog/php/temegram-php-message/</guid>
      <description>telegram php &amp;lt;?php namespace App\Repositories; use GuzzleHttp\Client; use GuzzleHttp\Psr7\Response; use Illuminate\Support\Facades\Log; // 申请bot,建立订阅通道，建立组，管理订阅通道和组，将bot拉入组内 class TelegramRepository extends BaseRepository { static public $curl; protected $list; public $id, $first_name; public function __construct(){ if (!self::$curl) self::$curl = new Client([&amp;#39;base_uri&amp;#39; =&amp;gt; &amp;#34;https://api.telegram.org/bot&amp;#34;.config(&amp;#39;other.telegram&amp;#39;).&amp;#34;/&amp;#34;]); } public function make() { $result = self::$curl-&amp;gt;get(&amp;#34;getUpdates&amp;#34;, [&amp;#39;verify&amp;#39; =&amp;gt; false]); $this-&amp;gt;list = $result-&amp;gt;getBody()-&amp;gt;getContents(); return $this; } public function one($index=0, $field=&amp;#39;chat&amp;#39;) { if ($this-&amp;gt;list) { $data = json_decode($this-&amp;gt;list, true); if (is_array($data)) { if (isset($data[&amp;#39;result&amp;#39;][$index])) { //chat针对组  $info = $data[&amp;#39;result&amp;#39;][$index][&amp;#39;message&amp;#39;][$field]; foreach ($info as $k=&amp;gt;$v) { $this-&amp;gt;$k = $v; } } } } return $this; } public function push(string $message = &amp;#39;&amp;#39;, callable $call=null) { if ($call)$call($this); $msg = array( &amp;#39;位置 : &amp;#39;.</description>
    </item>
    
  </channel>
</rss>